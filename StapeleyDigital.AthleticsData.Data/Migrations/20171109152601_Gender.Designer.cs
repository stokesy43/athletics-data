// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using StapeleyDigital.AthleticsData.Data;
using System;

namespace StapeleyDigital.AthleticsData.Data.Migrations
{
    [DbContext(typeof(AthleticsDataContext))]
    [Migration("20171109152601_Gender")]
    partial class Gender
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.Athlete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AgeGroup");

                    b.Property<string>("Gender");

                    b.Property<string>("Name");

                    b.Property<int>("PowerOf10Id");

                    b.HasKey("Id");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppVersion");

                    b.Property<string>("AppVersionReadable");

                    b.Property<string>("BuildNumber");

                    b.Property<string>("BundleId");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.Property<bool>("Notifications");

                    b.Property<string>("UniqueId");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.DeviceAthlete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AthleteId");

                    b.Property<int>("DeviceId");

                    b.Property<bool>("Notifications");

                    b.HasKey("Id");

                    b.HasIndex("AthleteId");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceAthletes");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("PowerOf10Id");

                    b.Property<string>("ShortName");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.EventStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AgeGroup");

                    b.Property<int>("EventId");

                    b.Property<string>("Gender");

                    b.Property<int>("StandardId");

                    b.Property<double>("Value");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("StandardId");

                    b.ToTable("EventStandards");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("PowerOf10Id");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.Performance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AthleteId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("EventId");

                    b.Property<int>("MeetingId");

                    b.Property<string>("PerformanceValue");

                    b.Property<string>("Position");

                    b.Property<int?>("StandardId");

                    b.Property<string>("Venue");

                    b.HasKey("Id");

                    b.HasIndex("AthleteId");

                    b.HasIndex("EventId");

                    b.HasIndex("MeetingId");

                    b.HasIndex("StandardId");

                    b.ToTable("Performances");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.Standard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GroupName");

                    b.Property<string>("Name");

                    b.Property<int>("Priority");

                    b.HasKey("Id");

                    b.ToTable("Standards");
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.DeviceAthlete", b =>
                {
                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Athlete", "Athlete")
                        .WithMany("DeviceAthletes")
                        .HasForeignKey("AthleteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Device", "Device")
                        .WithMany("DeviceAthletes")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.EventStandard", b =>
                {
                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Event", "Event")
                        .WithMany("EventStandards")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Standard", "Standard")
                        .WithMany("EventStandards")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StapeleyDigital.AthelticsData.Domain.Performance", b =>
                {
                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Athlete", "Athlete")
                        .WithMany("Performances")
                        .HasForeignKey("AthleteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StapeleyDigital.AthelticsData.Domain.Standard", "Standard")
                        .WithMany()
                        .HasForeignKey("StandardId");
                });
#pragma warning restore 612, 618
        }
    }
}
